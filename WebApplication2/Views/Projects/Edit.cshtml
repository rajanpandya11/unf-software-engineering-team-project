@model WebApplication2.Domain.Project

@{
    ViewBag.Title = Model.Name;
}

<h2>Edit @Model.Name</h2>

<div class="text-center">
    <i class="fa fa-chevron-circle-left glyphicon glyphicon-align-center" style="color: /**#F05F40*/darkblue" aria-hidden="true"></i>
    @Html.ActionLink(
        linkText: "Back to Details",
        actionName: "Details",
        controllerName: "Projects",
        routeValues: new
        {
            id = Model.pid
        },
        htmlAttributes: null
        )
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Project</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(Model => Model.pid)
        @Html.HiddenFor(Model => Model.StartedOn)
        @Html.HiddenFor(Model => Model.Owner)

        <div class="form-group">
            @Html.LabelFor(Model => Model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(Model => Model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(Model => Model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(Model => Model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(Model => Model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(Model => Model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(Model => Model.DueDate, new { htmlAttributes = new { @class = "form-control date-picker" } })
                @Html.ValidationMessageFor(Model => Model.DueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(Model => Model.Budget, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(Model => Model.Budget, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(Model => Model.Budget, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(Model => Model.Completed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(Model => Model.Completed)
                    @Html.ValidationMessageFor(Model => Model.Completed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(Model => Model.CurrentSpent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(Model => Model.CurrentSpent, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(Model => Model.CurrentSpent, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
}


@section Scripts {
    <script type="text/javascript">
        $(function () {
            // This will make every element with the class "date-picker" into a DatePicker element
            $('.date-picker').datepicker();
        })
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
